generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Agenda {
  id         Int                 @id @default(autoincrement())
  title      String
  resolution String
  content    String
  type       AgendaType?
  startAt    DateTime?           @map("start_at")
  endAt      DateTime?           @map("end_at")
  createdAt  DateTime            @default(now()) @map("created_at")
  updatedAt  DateTime            @updatedAt @map("updated_at")
  deletedAt  DateTime?           @map("deleted_at")
  choices    Choice[]
  voters     UserAgendaVotable[]

  @@map("agenda")
}

model AgendaType {
  id       Int     @id @default(autoincrement())
  agenda   Agenda  @relation(fields: [agendaId], references: [id])
  agendaId Int     @map("agenda_id") @unique
  named    Boolean @default(false)
  private  Boolean @default(false)
  @@map("agenda_type")
}


model User {
  id          Int                 @id @default(autoincrement())
  username    String              @unique
  displayName String
  isAdmin     Boolean             @default(false) @map("is_admin")
  chats       Chat[]
  choices     UserChoice[]
  agendas     UserAgendaVotable[]
  tags        UserTag[]

  @@map("user")
}

model Choice {
  id       Int          @id @default(autoincrement())
  agenda   Agenda       @relation(fields: [agendaId], references: [id])
  agendaId Int          @map("agenda_id")
  name     String
  users    UserChoice[]

  @@map("choice")
}

model Chat {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  type      ChatType
  message   String   @db.VarChar(500)
  createdAt DateTime @default(now()) @map("created_at")

  @@map("chat")
}

model Tag {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String
  users       UserTag[]

  @@map("tag")
}

model TemplateChoice {
  id         Int      @id @default(autoincrement())
  template   Template @relation(fields: [templateId], references: [id])
  templateId Int      @map("template_id")
  name       String

  @@map("template_choice")
}

model Template {
  id           Int              @id @default(autoincrement())
  templateName String
  title        String
  content      String
  resolution   String
  choices      TemplateChoice[]

  @@map("template")
}

model UserChoice {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @map("user_id")
  choice   Choice @relation(fields: [choiceId], references: [id])
  choiceId Int    @map("choice_id")

  @@id([userId, choiceId])
  @@map("user_choice")
}

model UserAgendaVotable {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @map("user_id")
  agenda   Agenda @relation(fields: [agendaId], references: [id])
  agendaId Int    @map("agenda_id")

  @@id([userId, agendaId])
  @@map("user_agenda_votable")
}

model UserTag {
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int  @map("tag_id")

  @@id([userId, tagId])
  @@map("user_tag")
}

enum ChatType {
  message
  notice

  @@map("chat_type")
}
